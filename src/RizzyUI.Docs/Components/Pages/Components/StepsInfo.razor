
@page "/components/steps"
@namespace RizzyUI.Pages
@using RizzyUI
@using RizzyUI.Extensions
@inherits RzComponent

<PageTitle>Steps</PageTitle>

<RzQuickReferenceContainer>
    <RzArticle ProseWidth="ProseWidth.UltraWide">
        <SideContent>
            <RzQuickReference />
        </SideContent>
        <MainContent>
            <!-- Page Title and Overview -->
            <RzHeading Level="HeadingLevel.H1" class="scroll-mt-20">
                Steps
            </RzHeading>
            <RzParagraph>
                The Steps component provides a visual progress indicator to guide users through multi‑step processes.
                Each step is displayed as a circle (with either a number or an an optional icon) along with an associated label and optional caption.
                Use the <code>StepStatus</code> enum to define whether a step is completed, current, or upcoming.
                The component supports both horizontal and vertical orientations and adapts its styling based on the active status.
            </RzParagraph>

            <!-- Example 1: Horizontal Steps -->
            <section class="my-8 py-2">
                <RzHeading Level="HeadingLevel.H2" QuickReferenceTitle="Horizontal Steps" class="scroll-mt-20">
                    Horizontal Steps Example
                </RzHeading>
                <RzParagraph>
                    In the example below, a horizontal Steps component is used to display a registration process.
                    The first step is marked as completed, the second is current, and the remaining steps are upcoming.
                    The active steps use the color defined by <code>StatusColor.Primary</code>.
                </RzParagraph>

                <RzBrowser Layout="typeof(PreviewLayout)">
                    <div class="mx-auto p-8 mb-5 flex justify-center min-h-60">
                        <RzSteps Orientation="Orientation.Horizontal" 
                               ShowLabels="true" 
                               AriaLabel="Registration RzProgress" 
                               ActiveColor="StatusColor.Primary">
                            <RzStep Label="Create an account" Status="StepStatus.Completed" Caption="Account created" />
                            <RzStep Label="Select a plan" Status="StepStatus.Current" Caption="Plan selection" />
                            <RzStep Label="Checkout" Status="StepStatus.Upcoming" Caption="Review your cart" />
                            <RzStep Label="Get started" Status="StepStatus.Upcoming" Caption="Begin your journey" />
                        </RzSteps>
                    </div>
                </RzBrowser>

                <RzCodeViewer Language=@CodeLanguage.Razor class="mb-10">
&lt;Steps Orientation=&quot;Orientation.Horizontal&quot; 
       ShowLabels=&quot;true&quot; 
       AriaLabel=&quot;Registration RzProgress&quot; 
       ActiveColor=&quot;StatusColor.Primary&quot;&gt;
    &lt;Step Label=&quot;Create an account&quot; Status=&quot;StepStatus.Completed&quot; Caption=&quot;Account created&quot; /&gt;
    &lt;Step Label=&quot;Select a plan&quot; Status=&quot;StepStatus.Current&quot; Caption=&quot;Plan selection&quot; /&gt;
    &lt;Step Label=&quot;Checkout&quot; Status=&quot;StepStatus.Upcoming&quot; Caption=&quot;Review your cart&quot; /&gt;
    &lt;Step Label=&quot;Get started&quot; Status=&quot;StepStatus.Upcoming&quot; Caption=&quot;Begin your journey&quot; /&gt;
&lt;/Steps&gt;
                </RzCodeViewer>
            </section>

            <!-- Example 2: Vertical Steps -->
            <section class="my-8 py-2">
                <RzHeading Level="HeadingLevel.H2" QuickReferenceTitle="Vertical Steps" class="scroll-mt-20">
                    Vertical Steps Example
                </RzHeading>
                <RzParagraph>
                    In this example the Steps component is rendered vertically. Vertical orientation is ideal for processes
                    where space permits a stacked layout. In this case, the steps represent an onboarding process with two completed steps,
                    one current step, and one upcoming step. The active steps use the color defined by <code>StatusColor.Success</code>.
                </RzParagraph>

                <RzBrowser Layout="typeof(PreviewLayout)">
                    <div class="mx-auto p-8 mb-5 flex justify-center min-h-80">
                        <RzSteps Orientation="Orientation.Vertical" 
                               ShowLabels="true" 
                               AriaLabel="Onboarding RzProgress" 
                               ActiveColor="StatusColor.Success">
                            <RzStep Label="Sign Up" Status="StepStatus.Completed" Caption="Account created" />
                            <RzStep Label="Verify Email" Status="StepStatus.Completed" Caption="Email verified" />
                            <RzStep Label="Complete Profile" Status="StepStatus.Current" Caption="Profile incomplete" />
                            <RzStep Label="Get Started" Status="StepStatus.Upcoming" Caption="Start exploring" />
                        </RzSteps>
                    </div>
                </RzBrowser>

                <RzCodeViewer Language=@CodeLanguage.Razor class="mb-10">
&lt;Steps Orientation=&quot;Orientation.Vertical&quot; 
       ShowLabels=&quot;true&quot; 
       AriaLabel=&quot;Onboarding RzProgress&quot; 
       ActiveColor=&quot;StatusColor.Success&quot;&gt;
    &lt;Step Label=&quot;Sign Up&quot; Status=&quot;StepStatus.Completed&quot; Caption=&quot;Account created&quot; /&gt;
    &lt;Step Label=&quot;Verify Email&quot; Status=&quot;StepStatus.Completed&quot; Caption=&quot;Email verified&quot; /&gt;
    &lt;Step Label=&quot;Complete Profile&quot; Status=&quot;StepStatus.Current&quot; Caption=&quot;Profile incomplete&quot; /&gt;
    &lt;Step Label=&quot;Get Started&quot; Status=&quot;StepStatus.Upcoming&quot; Caption=&quot;Start exploring&quot; /&gt;
&lt;/Steps&gt;
                </RzCodeViewer>
            </section>

            <!-- Parameters Table: Steps -->
            <section class="my-8 py-2">
                <RzHeading Level="HeadingLevel.H2" QuickReferenceTitle="Steps Component Parameters" class="scroll-mt-20">
                    Steps Component Parameters
                </RzHeading>
                  <div class="not-prose mt-6 mb-10 overflow-hidden rounded-md border border-zinc-200 dark:border-zinc-800">
                    <table class="w-full text-sm">
                        <thead class="text-left bg-zinc-100/75 font-semibold text-zinc-700 dark:bg-zinc-900/50 dark:text-zinc-300">
                            <tr>
                                <th scope="col" class="w-1/5 px-4 py-3">Property</th>
                                <th scope="col" class="w-2/5 px-4 py-3">Description</th>
                                <th scope="col" class="w-1/5 px-4 py-3">Type</th>
                                <th scope="col" class="px-4 py-3">Default</th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-zinc-200 dark:divide-zinc-800">
                            <tr class="align-top">
                                <td class="px-4 py-4"><code class="font-mono font-medium text-sky-600 dark:text-sky-400">Orientation</code></td>
                                <td class="px-4 py-4 text-zinc-600 dark:text-zinc-400"><code>Orientation</code> – Specifies the layout direction of the steps. Options are <code class="rounded-md bg-zinc-100 px-1.5 py-0.5 font-mono text-sm font-semibold text-zinc-700 dark:bg-zinc-800 dark:text-zinc-200">Orientation.Horizontal</code> or <code class="rounded-md bg-zinc-100 px-1.5 py-0.5 font-mono text-sm font-semibold text-zinc-700 dark:bg-zinc-800 dark:text-zinc-200">Orientation.Vertical</code>.</td>
                                <td class="px-4 py-4"><code class="font-mono text-violet-600 dark:text-violet-400">Orientation</code></td>
                                <td class="px-4 py-4 text-zinc-500"><code class="font-mono">Orientation.Horizontal</code></td>
                            </tr>
                            <tr class="align-top">
                                <td class="px-4 py-4"><code class="font-mono font-medium text-sky-600 dark:text-sky-400">ShowLabels</code></td>
                                <td class="px-4 py-4 text-zinc-600 dark:text-zinc-400"><code>bool</code> – Determines whether step labels are rendered.</td>
                                <td class="px-4 py-4"><code class="font-mono text-violet-600 dark:text-violet-400">bool</code></td>
                                <td class="px-4 py-4 text-zinc-500"><code class="font-mono">true</code></td>
                            </tr>
                            <tr class="align-top">
                                <td class="px-4 py-4"><code class="font-mono font-medium text-sky-600 dark:text-sky-400">AriaLabel</code></td>
                                <td class="px-4 py-4 text-zinc-600 dark:text-zinc-400"><code>string?</code> – Provides an accessible label for the steps container.</td>
                                <td class="px-4 py-4"><code class="font-mono text-violet-600 dark:text-violet-400">string?</code></td>
                                <td class="px-4 py-4 text-zinc-500"><code class="font-mono">null</code></td>
                            </tr>
                            <tr class="align-top">
                                <td class="px-4 py-4"><code class="font-mono font-medium text-sky-600 dark:text-sky-400">ActiveColor</code></td>
                                <td class="px-4 py-4 text-zinc-600 dark:text-zinc-400"><code>StatusColor</code> – Determines the color used for completed and current steps. Options: <code class="rounded-md bg-zinc-100 px-1.5 py-0.5 font-mono text-sm font-semibold text-zinc-700 dark:bg-zinc-800 dark:text-zinc-200">StatusColor.Primary</code>, <code class="rounded-md bg-zinc-100 px-1.5 py-0.5 font-mono text-sm font-semibold text-zinc-700 dark:bg-zinc-800 dark:text-zinc-200">StatusColor.Secondary</code>, <code class="rounded-md bg-zinc-100 px-1.5 py-0.5 font-mono text-sm font-semibold text-zinc-700 dark:bg-zinc-800 dark:text-zinc-200">StatusColor.Success</code>, <code class="rounded-md bg-zinc-100 px-1.5 py-0.5 font-mono text-sm font-semibold text-zinc-700 dark:bg-zinc-800 dark:text-zinc-200">StatusColor.Info</code>, <code class="rounded-md bg-zinc-100 px-1.5 py-0.5 font-mono text-sm font-semibold text-zinc-700 dark:bg-zinc-800 dark:text-zinc-200">StatusColor.Warning</code>, or <code class="rounded-md bg-zinc-100 px-1.5 py-0.5 font-mono text-sm font-semibold text-zinc-700 dark:bg-zinc-800 dark:text-zinc-200">StatusColor.Destructive</code>.</td>
                                <td class="px-4 py-4"><code class="font-mono text-violet-600 dark:text-violet-400">StatusColor</code></td>
                                <td class="px-4 py-4 text-zinc-500"><code class="font-mono">StatusColor.Primary</code></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </section>

            <!-- Parameters Table: Step -->
            <section class="my-8 py-2">
                <RzHeading Level="HeadingLevel.H2" QuickReferenceTitle="Step Component Parameters" class="scroll-mt-20">
                    Step Component Parameters
                </RzHeading>
                  <div class="not-prose mt-6 mb-10 overflow-hidden rounded-md border border-zinc-200 dark:border-zinc-800">
                    <table class="w-full text-sm">
                        <thead class="text-left bg-zinc-100/75 font-semibold text-zinc-700 dark:bg-zinc-900/50 dark:text-zinc-300">
                            <tr>
                                <th scope="col" class="w-1/5 px-4 py-3">Property</th>
                                <th scope="col" class="w-2/5 px-4 py-3">Description</th>
                                <th scope="col" class="w-1/5 px-4 py-3">Type</th>
                                <th scope="col" class="px-4 py-3">Default</th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-zinc-200 dark:divide-zinc-800">
                            <tr class="align-top">
                                <td class="px-4 py-4"><code class="font-mono font-medium text-sky-600 dark:text-sky-400">Label</code></td>
                                <td class="px-4 py-4 text-zinc-600 dark:text-zinc-400"><code>string</code> – The main label for the step.</td>
                                <td class="px-4 py-4"><code class="font-mono text-violet-600 dark:text-violet-400">string</code></td>
                                <td class="px-4 py-4"><span class="inline-flex items-center rounded-md bg-green-50 px-2 py-1 text-xs font-medium text-green-700 ring-1 ring-inset ring-green-600/20 dark:bg-green-500/10 dark:text-green-400 dark:ring-green-500/20">Required</span></td>
                            </tr>
                            <tr class="align-top">
                                <td class="px-4 py-4"><code class="font-mono font-medium text-sky-600 dark:text-sky-400">Status</code></td>
                                <td class="px-4 py-4 text-zinc-600 dark:text-zinc-400"><code>StepStatus</code> – Indicates the step’s current status. Options are <code class="rounded-md bg-zinc-100 px-1.5 py-0.5 font-mono text-sm font-semibold text-zinc-700 dark:bg-zinc-800 dark:text-zinc-200">StepStatus.Completed</code>, <code class="rounded-md bg-zinc-100 px-1.5 py-0.5 font-mono text-sm font-semibold text-zinc-700 dark:bg-zinc-800 dark:text-zinc-200">StepStatus.Current</code>, and <code class="rounded-md bg-zinc-100 px-1.5 py-0.5 font-mono text-sm font-semibold text-zinc-700 dark:bg-zinc-800 dark:text-zinc-200">StepStatus.Upcoming</code>.</td>
                                <td class="px-4 py-4"><code class="font-mono text-violet-600 dark:text-violet-400">StepStatus</code></td>
                                <td class="px-4 py-4"><span class="inline-flex items-center rounded-md bg-green-50 px-2 py-1 text-xs font-medium text-green-700 ring-1 ring-inset ring-green-600/20 dark:bg-green-500/10 dark:text-green-400 dark:ring-green-500/20">Required</span></td>
                            </tr>
                            <tr class="align-top">
                                <td class="px-4 py-4"><code class="font-mono font-medium text-sky-600 dark:text-sky-400">Caption</code></td>
                                <td class="px-4 py-4 text-zinc-600 dark:text-zinc-400"><code>string?</code> – Optional supplementary text that provides additional context for the step.</td>
                                <td class="px-4 py-4"><code class="font-mono text-violet-600 dark:text-violet-400">string?</code></td>
                                <td class="px-4 py-4 text-zinc-500"><code class="font-mono">null</code></td>
                            </tr>
                            <tr class="align-top">
                                <td class="px-4 py-4"><code class="font-mono font-medium text-sky-600 dark:text-sky-400">Icon</code></td>
                                <td class="px-4 py-4 text-zinc-600 dark:text-zinc-400"><code>SvgIcon?</code> – Optional icon to display in place of the step number.</td>
                                <td class="px-4 py-4"><code class="font-mono text-violet-600 dark:text-violet-400">SvgIcon?</code></td>
                                <td class="px-4 py-4 text-zinc-500"><code class="font-mono">null</code></td>
                            </tr>
                            <tr class="align-top">
                                <td class="px-4 py-4"><code class="font-mono font-medium text-sky-600 dark:text-sky-400">AriaLabel</code></td>
                                <td class="px-4 py-4 text-zinc-600 dark:text-zinc-400"><code>string?</code> – Optional ARIA label for the step, providing more context for accessibility. If not provided, the <code class="rounded-md bg-zinc-100 px-1.5 py-0.5 font-mono text-sm font-semibold text-zinc-700 dark:bg-zinc-800 dark:text-zinc-200">Label</code> is typically used by the parent component.</td>
                                <td class="px-4 py-4"><code class="font-mono text-violet-600 dark:text-violet-400">string?</code></td>
                                <td class="px-4 py-4 text-zinc-500"><code class="font-mono">null</code></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </section>

        </MainContent>
    </RzArticle>
</RzQuickReferenceContainer>