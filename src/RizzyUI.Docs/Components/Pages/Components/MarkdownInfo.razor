
@page "/components/markdown"
@namespace RizzyUI.Pages
@using RizzyUI
@using RizzyUI.Extensions
@inherits RzComponent

<PageTitle>Markdown</PageTitle>

<RzQuickReferenceContainer>
    <RzArticle ProseWidth="ProseWidth.UltraWide">
        <SideContent>
            <RzQuickReference />
        </SideContent>
        <MainContent>
            <RzHeading Level="HeadingLevel.H1" class="scroll-mt-20">
                Markdown
            </RzHeading>
            <RzParagraph>
                The Markdown component converts GitHub‑style Markdown into HTML. It supports RzHeadings, RzParagraphs, lists, inline code,
                code blocks, links, images, and more. The conversion is powered by Markdig and syntax highlighting is applied via Highlight.js
                using the <code>rzMarkdown</code> Alpine.js data object.
            </RzParagraph>
            <RzParagraph>
                For a full-featured markdown demo, <RzLink href="/markdown-demo">click here</RzLink>.
            </RzParagraph>

            <RzAlert Variant="AlertVariant.Warning">
                <AlertTitle>Special Note</AlertTitle>
                <AlertDescription>
                    The Markdown component requires the Tailwind Typography component in order to render correctly.
                </AlertDescription>
            </RzAlert>

            <!-- Example 1: Basic Markdown Rendering -->
            <section class="my-8 py-2">
                <RzHeading Level="HeadingLevel.H2" QuickReferenceTitle="Basic Markdown" class="scroll-mt-20">
                    Basic Markdown Rendering
                </RzHeading>
                <RzParagraph TextColor="SemanticColor.Foreground">
                    This example demonstrates rendering simple Markdown with RzHeadings, RzParagraphs, lists, and inline styling.
                </RzParagraph>

                <RzBrowser Layout="typeof(PreviewLayout)">
                    <div class="mx-auto p-8 mb-5 min-h-60">
                        <RzMarkdown>
                            # Welcome to RizzyUI Markdown

                            This is an example of **bold text**, *italic text*, and `inline code`.

                            - List Item One
                            - List Item Two
                            - List Item Three

                            [Visit our website](https://rizzyui.com)
                        </RzMarkdown>
                    </div>
                </RzBrowser>

                <RzCodeViewer Language="@CodeLanguage.Markdown" class="mb-10">
                    &lt;RzMarkdown&gt;
                    # Welcome to RizzyUI Markdown

                    This is an example of **bold text**, *italic text*, and `inline code`.

                    - List Item One
                    - List Item Two
                    - List Item Three

                    [Visit our website](https://rizzyui.com)
                    &lt;/RzMarkdown&gt;
                </RzCodeViewer>
            </section>

            <!-- Example 2: Markdown with Code Block -->
            <section class="my-8 py-2">
                <RzHeading Level="HeadingLevel.H2" QuickReferenceTitle="Markdown with Code Block" class="scroll-mt-20">
                    Markdown with Code Block
                </RzHeading>
                <RzParagraph>
                    In this example, the Markdown component renders a code block with syntax highlighting for C#.
                </RzParagraph>

                <RzBrowser Layout="typeof(PreviewLayout)">
                    <div class="mx-auto p-8 mb-5 min-h-60">
                        <RzMarkdown>
                            ## C# Code Example

                            ```csharp
                            public class HelloWorld {
                                public void SayHello() {
                                    Console.WriteLine("Hello, world!");
                                }
                            }
                            ```
                        </RzMarkdown>
                    </div>
                </RzBrowser>

                <RzCodeViewer Language="@CodeLanguage.Markdown" class="mb-10">
                    &lt;RzMarkdown&gt;
                    ## C# Code Example

                    ```csharp
                    public class HelloWorld {
                        public void SayHello() {
                            Console.WriteLine("Hello, world!");
                        }
                    }
                    ```
                    &lt;/RzMarkdown&gt;
                </RzCodeViewer>
            </section>

            <!-- Markdown Component Parameters -->
            <section class="my-8 py-2">
                <RzHeading Level="HeadingLevel.H2" QuickReferenceTitle="Markdown Parameters" class="scroll-mt-20">
                    Markdown Component Parameters
                </RzHeading>
                  <div class="not-prose mt-6 mb-10 overflow-hidden rounded-md border border-zinc-200 dark:border-zinc-800">
                    <table class="w-full text-sm">
                        <thead class="text-left bg-zinc-100/75 font-semibold text-zinc-700 dark:bg-zinc-900/50 dark:text-zinc-300">
                            <tr>
                                <th scope="col" class="w-1/5 px-4 py-3">Property</th>
                                <th scope="col" class="w-2/5 px-4 py-3">Description</th>
                                <th scope="col" class="w-1/5 px-4 py-3">Type</th>
                                <th scope="col" class="px-4 py-3">Default</th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-zinc-200 dark:divide-zinc-800">
                            <tr class="align-top">
                                <td class="px-4 py-4"><code class="font-mono font-medium text-sky-600 dark:text-sky-400">Content</code></td>
                                <td class="px-4 py-4 text-zinc-600 dark:text-zinc-400"><code>RenderFragment</code> – The Markdown content to be converted to HTML. Alternatively, you can pass a string via the <code class="rounded-md bg-zinc-100 px-1.5 py-0.5 font-mono text-sm font-semibold text-zinc-700 dark:bg-zinc-800 dark:text-zinc-200">Content</code> parameter.</td>
                                <td class="px-4 py-4"><code class="font-mono text-violet-600 dark:text-violet-400">RenderFragment?</code></td>
                                <td class="px-4 py-4 text-zinc-500"><code class="font-mono">null</code></td>
                            </tr>
                            <tr class="align-top">
                                <td class="px-4 py-4"><code class="font-mono font-medium text-sky-600 dark:text-sky-400">ComponentAssets</code></td>
                                <td class="px-4 py-4 text-zinc-600 dark:text-zinc-400"><code>string[]</code> – Optional array of asset URLs (JavaScript/CSS) to load for syntax highlighting.</td>
                                <td class="px-4 py-4"><code class="font-mono text-violet-600 dark:text-violet-400">string[]</code></td>
                                <td class="px-4 py-4 text-zinc-500"><code class="font-mono">null</code></td>
                            </tr>
                            <tr class="align-top">
                                <td class="px-4 py-4"><code class="font-mono font-medium text-sky-600 dark:text-sky-400">ProseWidth</code></td>
                                <td class="px-4 py-4 text-zinc-600 dark:text-zinc-400"><code>ProseWidth</code> – Controls the maximum width of the rendered prose content.</td>
                                <td class="px-4 py-4"><code class="font-mono text-violet-600 dark:text-violet-400">ProseWidth</code></td>
                                <td class="px-4 py-4 text-zinc-500"><code class="font-mono">ProseWidth.Comfortable</code></td>
                            </tr>
                            <tr class="align-top">
                                <td class="px-4 py-4"><code class="font-mono font-medium text-sky-600 dark:text-sky-400">Pipeline</code></td>
                                <td class="px-4 py-4 text-zinc-600 dark:text-zinc-400"><code>MarkdownPipeline?</code> – The Markdig pipeline used for conversion. Defaults to a pipeline with advanced extensions and custom code block rendering.</td>
                                <td class="px-4 py-4"><code class="font-mono text-violet-600 dark:text-violet-400">MarkdownPipeline?</code></td>
                                <td class="px-4 py-4 text-zinc-500"><code class="font-mono">null</code></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </section>
        </MainContent>
    </RzArticle>
</RzQuickReferenceContainer>