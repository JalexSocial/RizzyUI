@typeparam TValue
@namespace RizzyUI
@using Blazicons
@inherits RizzyComponent

<label @attributes="AdditionalAttributes" class="group relative flex">
    <RzInputRadio TValue="TValue" class="opacity-0 peer absolute left-0 top-0 appearance-none" Name="@ParentRadioGroup?.Name" Id="@Id" Value="@Value" />
    <span class="z-1 text-primary text-xl opacity-0 absolute bottom-0 right-0 top-0 flex scale-50 cursor-pointer items-center px-4 transition peer-checked:scale-100 peer-checked:opacity-100">
	    <Blazicon Svg="CheckboxIcon"/>
    </span>
    <span class="group-hover:border-primary relative flex grow cursor-pointer rounded-lg border p-4 peer-checked:bg-surface-alt dark:border-on-surface-dark peer-checked:border-primary dark:peer-checked:border-primary dark:peer-checked:bg-surface-dark-alt dark:peer-checked:bg-opacity-10 peer-focus:ring peer-focus:ring-primary">
        <div class="flex">
            @if (Icon != null)
            {
                <div class="mr-2 text-2xl content-center">
	                <Blazicon Svg="Icon"/>
                </div>
            }
            <span class="grow pr-8 text-sm">
                <span class="mb-1 block font-bold">@Label</span>
                @if (Description != null)
                {
                    <span class="block text-on-surface dark:text-on-surface-dark">@Description</span>
                }
                @ChildContent
            </span>
        </div>
    </span>
</label>

@code {
	private SvgIcon CheckboxIcon { get; set; } = MdiIcon.CheckboxMarkedCircle;

    /// <summary>
    /// Gets or sets the parent radio group.
    /// </summary>
    [CascadingParameter]
    public RadioGroup<TValue>? ParentRadioGroup { get; set; }

    /// <summary>
    /// Gets or sets the name of the icon (if any) displayed alongside the label.
    /// </summary>
    [Parameter]
    public SvgIcon? Icon { get; set; }

    /// <summary>
    /// Gets or sets the label of the radio item.
    /// </summary>
    [Parameter, EditorRequired]
    public string Label { get; set; } = string.Empty;

    /// <summary>
    /// Gets or sets the value associated with this radio item.
    /// </summary>
    [Parameter]
    public TValue? Value { get; set; } = default!;

    /// <summary>
    /// Gets or sets the description content.
    /// </summary>
    [Parameter]
    public RenderFragment? Description { get; set; }

    /// <summary>
    /// Gets or sets the ID of the radio item.
    /// </summary>
    [Parameter]
    public string Id { get; set; } = "rd" + Guid.NewGuid();

    /// <summary>
    /// Optional additional child content.
    /// </summary>
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        ParentRadioGroup?.AddRadioItem(this);

        if (ParentRadioGroup != null)
	        CheckboxIcon = ParentRadioGroup.CheckboxIcon;
    }
}
