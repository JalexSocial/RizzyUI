@namespace RizzyUI
@inherits RizzyUI.RizzyComponent

<HtmlElement Element="@Element" @attributes="AdditionalAttributes" class="@RootClass()">
    @ChildContent
</HtmlElement>

@code
{
    private const string BaseStyle = "flex flex-col rounded overflow-hidden shadow-sm border border-outline dark:border-outlineDark";

    protected override void OnInitialized()
    {
        base.OnInitialized();
        this.Element = "div";
    }

    /// <summary>
    /// Child content for the card
    /// </summary>
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    /// <summary>
    /// Background color
    /// </summary>
    [Parameter]
    public SemanticColor BackgroundColor { get; set; } = SemanticColor.Surface;

    /// <summary>
    /// Text color
    /// </summary>
    [Parameter]
    public SemanticColor TextColor { get; set; } = SemanticColor.OnSurface;

    /// <inheritdoc cref="RizzyComponent"/>
    protected override string? RootClass()
	{
		return TwMerge.Merge(AdditionalAttributes, BaseStyle, BackgroundColor.ToBackgroundClass(), TextColor.ToTextClass());
	}

}