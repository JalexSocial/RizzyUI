@namespace RizzyUI

@inherits RizzyComponent

<div class="overflow-auto mt-2" x-data="{
        codeLang: 'html',
        tailwindStyle: 'classic',
        codeTab: 'html',
        expand: false,
        border: true,
        codeStyle: '',
        init() {
     loadjs([' @Constants.ContentUrl("js/vendor/highlightjs/highlight.js")', '@Constants.ContentUrl("js/vendor/highlightjs/styles/stackoverflow-dark.css")' , '@Constants.ContentUrl("js/vendor/highlightjs-plugin/cshtml-razor.min.js")' ],
     {
              success: () => {
                // Ensure Highlight.js styles are applied after the script loads
                const codeBlock = document.getElementById('@CodeId');
console.log(codeBlock);
                if (window.hljs && codeBlock) {
                  window.hljs.highlightElement(codeBlock);
                }
              },
              error: () => {
                console.error('Failed to load Highlight.js');
              },
              async: false
            });
        }
    }">
    <!-- Code Config -->
    <div class="flex flex-col items-start justify-between gap-4 rounded-b-none border-b-0 border-outline bg-surfaceAlt p-4 text-sm text-slate-400 md:flex-row md:items-center md:gap-2 dark:border-outlineDark dark:bg-surfaceDarkAlt rounded-xl border font-inter" :class="[
                'rounded',
                border ? 'border' : 'border-none'
            ]">

        <span class="text-onSurface dark:text-onSurfaceDark">Razor Source</span>







    </div>
    <!-- /Code Config -->

    <div x-data="{
            copyHTML() {
                // if the short x-data available
                if (typeof configVals !== 'undefined' && configVals['x-data']) {
                    // ========== MINIMAL X-DATA ==========
                    if (configVals['x-data'] === 'minimal') {
                        // ___________ CLASSIC_MINIMAL ___________
                        if (tailwindStyle === 'classic') {
                            navigator.clipboard.writeText(
                                $refs.codeBlockMinimal.textContent,
                            )
                            // ___________ MODERN_MINIMAL ___________
                        } else if (tailwindStyle === 'modern') {
                            navigator.clipboard.writeText(
                                $refs.codeBlockModernMinimal.textContent,
                            )
                        }
                        // ========== FULL X-DATA ==========
                    } else if (configVals['x-data'] === 'full') {
                        // ___________ CLASSIC_VERBOSE ___________
                        if (tailwindStyle === 'classic') {
                            navigator.clipboard.writeText($refs.codeBlock.textContent)
                            // ___________ MODERN_VERBOSE ___________
                        } else if (tailwindStyle === 'modern') {
                            navigator.clipboard.writeText(
                                $refs.codeBlockModern.textContent,
                            )
                        }
                    }
                    // ========== MOST OF THE COMPONENTS ==========
                } else {
                    if (tailwindStyle === 'classic') {
                        navigator.clipboard.writeText($refs.codeBlock.textContent)
                    } else if (tailwindStyle === 'modern') {
                        navigator.clipboard.writeText($refs.codeBlockModern.textContent)
                    }
                }
            }
        }" class="!rounded-b-none w-full overflow-y-auto border-outlineDark bg-surfaceAltDark text-onSurfaceStrong max-h-[400px] border rounded-b-xl" x-bind:class="
            [
                expand ? '' : 'max-h-[400px]',
                border ? 'border' : 'border-none',
                'rounded-b',
            ]
        ">
        <!-- code  -->
        <div>

            <div class="flex h-11 items-center justify-between border-outlineDark bg-surfaceDark/40 text-onSurfaceDark border-b" :class="border ? 'border-b' : ''">
                <button aria-label="copy code" x-data="{ copied: false }" role="button" :title="copied ? 'copied' : 'copy'" @click="codeTab!='css' ? copyHTML() : copyCSS(); copied=!copied" class="my-auto ml-auto mr-2 overflow-hidden rounded-full p-1 hover:bg-surface/10 focus:outline-none focus:outline-offset-0 focus-visible:outline-2 active:-outline-offset-2 focus-visible:outline-onSurfaceDark" :class="[
                            copied ? 'focus-visible:outline-success' : 'focus-visible:outline-onSurfaceDark'
                        ]" x-on:click.away="copied=false" data-target="cardDefault" title="copy">
                    <svg x-show="!copied" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6 cursor-pointer text-onSurfaceDark" x-transition:enter="transition duration-200 ease-out" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M15.666 3.888A2.25 2.25 0 0013.5 2.25h-3c-1.03 0-1.9.693-2.166 1.638m7.332 0c.055.194.084.4.084.612v0a.75.75 0 01-.75.75H9a.75.75 0 01-.75-.75v0c0-.212.03-.418.084-.612m7.332 0c.646.049 1.288.11 1.927.184 1.1.128 1.907 1.077 1.907 2.185V19.5a2.25 2.25 0 01-2.25 2.25H6.75A2.25 2.25 0 014.5 19.5V6.257c0-1.108.806-2.057 1.907-2.185a48.208 48.208 0 011.927-.184"></path>
                    </svg>
                    <svg x-show="copied" x-transition:enter="transition duration-200 ease-out" x-transition:enter-start="translate-y-2 opacity-0" x-transition:enter-end="translate-y-0 opacity-100" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.3" stroke="currentColor" class="size-6 text-emerald-500" style="display: none;">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M11.35 3.836c-.065.21-.1.433-.1.664 0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75 2.25 2.25 0 00-.1-.664m-5.8 0A2.251 2.251 0 0113.5 2.25H15c1.012 0 1.867.668 2.15 1.586m-5.8 0c-.376.023-.75.05-1.124.08C9.095 4.01 8.25 4.973 8.25 6.108V8.25m8.9-4.414c.376.023.75.05 1.124.08 1.131.094 1.976 1.057 1.976 2.192V16.5A2.25 2.25 0 0118 18.75h-2.25m-7.5-10.5H4.875c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V18.75m-7.5-10.5h6.375c.621 0 1.125.504 1.125 1.125v9.375m-8.25-3l1.5 1.5 3-3.75"></path>
                    </svg>
                </button>
            </div>

            <div class="scroll-on font-source-code-pro relative overflow-y-auto max-h-60" :class="[
                    expand ? '' : 'max-h-60'
                ]">
                <pre x-ref="codeBlock" class="overflow-x-auto scroll-on text-white/60 text-sm" tabindex="0">
                <code class="language-cshtml-razor" id="@CodeId">@ChildContent</code>
                </pre>
            </div>
        </div>
        <!-- /code  -->
    </div>
    <button aria-label="expand the code container" class="flex w-full items-center justify-center gap-2 rounded-t-none border-t-0 border-outline bg-surfaceAlt p-2 text-onSurface focus:outline-none focus-visible:rounded-t-none focus-visible:border-2 focus-visible:border-primary dark:border-outlineDark dark:bg-surfaceDarkAlt/50 dark:text-onSurfaceDark dark:focus-visible:border-primaryDark rounded-xl border" x-on:click="expand=!expand">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2.5" stroke="currentColor" class="h-5 w-5 transition rotate-0" :class="expand ? 'rotate-180' : 'rotate-0'">
            <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 8.25l-7.5 7.5-7.5-7.5"></path>
        </svg>
    </button>
</div>

@code {
    private string CodeId { get; set; } = $"code{Guid.NewGuid():N}";

    /// <summary>
    /// Child content for the code viewer
    /// </summary>
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

}
