<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>

  <!-- RzAlert -->
  <data name="RzAlert.CloseButtonAriaLabel" xml:space="preserve">
    <value>Close alert</value>
    <comment>Aria-label for the close button on the alert component.</comment>
  </data>

  <!-- RzAvatar -->
  <data name="RzAvatar.DefaultAlternateText" xml:space="preserve">
    <value>User Avatar</value>
    <comment>Default alt text for the avatar image if DisplayName is not provided.</comment>
  </data>

  <!-- RzBreadcrumb -->
  <data name="RzBreadcrumb.AriaLabel" xml:space="preserve">
    <value>breadcrumb</value>
    <comment>Aria-label for the breadcrumb navigation container.</comment>
  </data>

  <!-- RzBrowser -->
  <data name="RzBrowser.DesktopScreenTitle" xml:space="preserve">
    <value>Desktop Screen</value>
    <comment>Title attribute for the desktop screen size button in the browser simulation.</comment>
  </data>
  <data name="RzBrowser.TabletScreenTitle" xml:space="preserve">
    <value>Tablet Screen</value>
    <comment>Title attribute for the tablet screen size button in the browser simulation.</comment>
  </data>
  <data name="RzBrowser.PhoneScreenTitle" xml:space="preserve">
    <value>Phone Screen</value>
    <comment>Title attribute for the phone screen size button in the browser simulation.</comment>
  </data>

  <!-- RzButton -->
  <data name="RzButton.AssistiveLabelDefault" xml:space="preserve">
    <value>Action Button</value>
    <comment>Default aria-label for a button component if not explicitly specified.</comment>
  </data>

  <!-- RzCodeViewer -->
  <data name="RzCodeViewer.DefaultViewerTitle" xml:space="preserve">
    <value>Source</value>
    <comment>Default title displayed in the header of the code viewer component.</comment>
  </data>
  <data name="RzCodeViewer.CopyButtonAriaLabel" xml:space="preserve">
    <value>copy code</value>
    <comment>Aria-label for the copy-to-clipboard button.</comment>
  </data>
  <data name="RzCodeViewer.CopyButtonTitleCopy" xml:space="preserve">
    <value>copy</value>
    <comment>Title attribute/tooltip text for the copy button before copying.</comment>
  </data>
  <data name="RzCodeViewer.CopyButtonTitleCopied" xml:space="preserve">
    <value>copied</value>
    <comment>Title attribute/tooltip text for the copy button after copying.</comment>
  </data>
  <data name="RzCodeViewer.ExpandButtonAriaLabel" xml:space="preserve">
    <value>expand the code container</value>
    <comment>Aria-label for the button that expands/collapses the code view.</comment>
  </data>

  <!-- RzDarkModeToggle -->
  <data name="RzDarkModeToggle.AriaLabel" xml:space="preserve">
    <value>Toggle dark mode</value>
    <comment>Aria-label for the button that toggles between light and dark themes.</comment>
  </data>

  <!-- RzDateEdit -->
  <data name="RzDateEdit.AriaLabel" xml:space="preserve">
    <value>Date picker</value>
    <comment>Aria-label for the overall date picker component wrapper.</comment>
  </data>
  <data name="RzDateEdit.InputAriaLabel" xml:space="preserve">
    <value>Select date</value>
    <comment>Aria-label specifically for the date input field.</comment>
  </data>

  <!-- RzNavbar -->
  <data name="RzNavbar.ToggleButtonScreenReaderTextDefault" xml:space="preserve">
    <value>Toggle side navigation</value>
    <comment>Default screen reader text for the mobile navigation toggle button.</comment>
  </data>

  <!-- RzProgress -->
  <data name="RzProgress.DefaultAriaLabel" xml:space="preserve">
    <value>Progress Bar</value>
    <comment>Default aria-label for the progress bar component if not explicitly specified.</comment>
  </data>
  <!-- Note: RzProgress.DefaultLabelFormat ({percent}%) is handled in JS -->

  <!-- RzQuickReference -->
  <data name="RzQuickReference.DefaultTitle" xml:space="preserve">
    <value>On this page</value>
    <comment>Default title displayed above the quick reference link list.</comment>
  </data>

  <!-- RzSearchButton -->
  <data name="RzSearchButton.DefaultLabel" xml:space="preserve">
    <value>Search</value>
    <comment>Default text label and aria-label for the search button if not explicitly specified.</comment>
  </data>

  <!-- RzSidebar -->
  <data name="RzSidebar.SkipLinkText" xml:space="preserve">
    <value>skip to the main content</value>
    <comment>Text for the accessibility skip link.</comment>
  </data>
  <data name="RzSidebar.FloatingToggleButtonSrText" xml:space="preserve">
    <value>sidebar toggle</value>
    <comment>Screen reader text for the floating sidebar toggle button (used when no navbar).</comment>
  </data>

  <!-- RzSteps -->
  <data name="RzSteps.DefaultAriaLabel" xml:space="preserve">
    <value>steps progress</value>
    <comment>Default aria-label for the steps container.</comment>
  </data>
  <data name="RzSteps.CompletedStepSrText" xml:space="preserve">
    <value>completed</value>
    <comment>Screen reader text announced for a completed step indicator.</comment>
  </data>

</root>