name: RizzyUI CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout Repository and Submodules
      - name: Checkout Repository and Submodules
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: https://registry.npmjs.org/
          
      - name: Install npm packages for RizzyUI
        working-directory: ./src/RizzyUI  # Specify the directory containing package.json
        run: npm install

      - name: Link tailwindcss for RizzyUI
        working-directory: ./src/RizzyUI  # Specify the directory where you want to run the command
        run: npm link tailwindcss
       
      - name: Install npm packages for RizzyUI.Docs
        working-directory: ./src/RizzyUI.Docs  # Specify the directory containing package.json
        run: npm install

      - name: Link tailwindcss for RizzyUI.Docs
        working-directory: ./src/RizzyUI.Docs  # Specify the directory where you want to run the command
        run: npm link tailwindcss

      - name: Install npm packages for RizzyUI Packages
        working-directory: ./packages/rizzyui  # Specify the directory containing package.json
        run: npm install
        
      # Cache NuGet packages to speed up builds
      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      # Setup .NET SDKs (8.x and 9.x)
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
            9.0.x

      # Restore Dependencies
      - name: Restore Dependencies
        run: dotnet restore src/RizzyUI.sln
        
      - name: Debug with tmate
        uses: mxschmitt/action-tmate@v3

      # Build the Solution in Release mode
      - name: Build Solution
        run: dotnet build src/RizzyUI.sln --configuration Release --no-restore

      # Publish NuGet Package using brandedoutcast/publish-nuget action
      - name: Publish NuGet Package 
        uses: brandedoutcast/publish-nuget@v2.5.2  
        with:   
          PROJECT_FILE_PATH: src/RizzyUI/RizzyUI.csproj   
          NUGET_KEY: ${{ secrets.NUGET_API_KEY }}

      # Generate Static Documentation
      - name: Generate Static Documentation
        working-directory: ./src/RizzyUI.Docs  # Specify the directory where you want to run the command
        run: dotnet run --configuration Release --no-build --project RizzyUI.Docs.csproj -- --generate-static

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
        
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./docs
          destination: ./_site
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        
      - name: Extract version from RizzyUI.csproj
        id: get_version
        shell: bash
        run: |
          ver=$(grep -oPm1 '(?<=<Version>)[^<]+' src/RizzyUI/RizzyUI.csproj)
          echo "version=$ver" >> "$GITHUB_OUTPUT"

      - name: Set npm package.json version
        working-directory: packages/rizzyui
        run: |
          npm pkg set version=${{ steps.get_version.outputs.version }}

      - name: Install dependencies
        working-directory: packages/rizzyui
        run: npm install

      - name: Build package
        working-directory: packages/rizzyui
        run: |
          npm run build
        
      - name: Publish Rizzy JS package to npm
        working-directory: packages/rizzyui
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} # create this secret in the repo / org
        run: |
          npm publish --access public        

  deploy:
    permissions:
      contents: read
      pages: write
      id-token: write  
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4